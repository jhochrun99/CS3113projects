#include "Level1.h"
#define LEVEL1_WIDTH 11
#define LEVEL1_HEIGHT 82

#define ENEMY_COUNT 1

//for one screen: 8 tall, 11 across
//blocks key: [dirt, 91], [sand, 18], [rock, 28], [ice, 202],  [nonrendered, 85]
//            ["blank", 16], [tower, 110], [castle, 111]
//            [spikes, 84], [lava, 83, 100]
unsigned int level1_data[] = {
    28,  85,  85,  85,  85,  85,  85,  91,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  91,  91,  28,
    28,  85,  85,  85,  91,  91,  91,  85,  91,  91,  28,
    28,  84,  84,  84,  91,  91,  91,  84,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  91,  91,  28,
    28,  91,  91,  91,  84,  91,  91,  91,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  91,  91,  28, // 8
    28,  91,  91,  91,  85,  85,  91,  85,  85,  85,  28,
    28,  91,  91,  91,  91,  91,  91,  84,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  84,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  84,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  28,  91,  91,  91,  28,
    28,  91,  28,  91,  91,  91,  91,  28,  91,  91,  28,
    28,  28,  91,  91,  85,  91,  91,  91,  91,  91,  28, // 16
    28,  91,  91,  84,  91,  84,  91,  91,  91,  91,  28,
    28,  91,  28,  28,  84,  91,  91,  91,  91,  91,  28,
    28,  28,  91,  28,  91,  91,  91,  91,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  28,  28,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  91,  28,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  91,  91,  28,
    28, 110,  85,  91,  91,  91,  91,  91,  91,  91,  28,
    28,  91,  91,  91,  91,  28,  28,  91,  91,  91,  28, // 24
    28,  91,  91,  28,  28,  91,  28,  84,  28,  85,  28,
    28,  91,  91,  91,  28,  91,  91,  91,  91,  91,  28,
    28,  84,  84,  91,  91,  91,  28,  91,  91,  91,  28,
    28,  91,  91,  84,  28,  91,  28,  91,  84,  84,  28,
    28,  91,  91,  91,  91,  91,  91,  28,  91,  91,  28,
    28,  85,  85,  28,  28,  91,  91,  91,  91,  91,  28,
    28,  28,  91,  91,  91,  84,  91,  91,  84,  91,  28,
    28,  91,  28,  28,  91,  28,  91,  84,  91,  91,  28, // 32
    28,  91,  91,  91,  91,  28,  28,  91,  91,  85,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  91,  18,  28,
    28,  91,  91,  18,  18,  18,  91,  28,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  28,  91,  28,
    28,  18,  84,  91,  91,  91,  84,  84,  91,  91,  28,
    28,  91,  28,  85,  85,  85,  28,  28,  18,  18,  28,
    28,  91,  18,  18,  91,  91,  91,  91,  91,  28,  28,
    28, 110,  18,  28,  28,  18,  85,  85,  85,  28,  28, // 40 SLIME IN THIS ROW
    28,  28,  91,  91,  91,  91,  18,  18,  18,  91,  28,
    28,  91,  28,  91,  28,  91,  28,  28,  28,  91,  28,
    28,  91,  91,  18,  18,  91,  91,  91,  91,  91,  28,
    28,  84,  91,  91,  91,  85,  85,  28,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  91,  91,  28,
    28,  91,  85,  85,  85,  85,  91,  91,  91,  18,  28, // SLIME IN THIS ROW
    28,  91,  91,  91,  91,  91,  91,  85,  85,  85,  28, // SLIME IN THIS ROW
    28,  91,  84,  18,  18,  18,  91,  91,  91,  91,  28, // 48
    28,  91,  18,  91,  91,  91,  91,  91,  91,  91,  28,
    28,  91,  91,  91,  91,  28,  91,  91,  91,  91,  28,
    28,  18,  18,  85,  85,  85,  85,  91,  84,  91,  28, // SLIME IN THIS ROW
    28,  84,  28,  91,  91,  91,  91,  18,  18,  91,  28,
    28,  91,  91,  91,  91,  18,  18,  91,  91,  91,  28,
    28,  91,  18,  91,  18,  91,  91,  91,  91,  91,  28,
    28,  18,  91,  91,  91,  91,  91,  91,  91,  84,  28,
    28, 202, 202, 202, 202, 202, 202, 202, 202, 202,  28, // 56
    28, 110,  91,  91,  91,  18,  91,  91,  28,  28,  28,
    28,  18, 202, 202,  91,  91,  91,  18,  18,  91,  28,
    28,  84,  84,  18,  91, 202,  91,  91,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  91, 202,  91,  91,  28,
    28,  91,  91,  91,  18,  18,  18,  91, 202,  91,  28,
    28,  91,  84,  18,  91,  91,  91,  85,  85,  91,  28,
    28,  91,  91,  91,  91,  83,  83,  83,  91,  91,  28,
    28,  91,  91,  91,  91, 100, 100, 100,  91,  91,  28, // 64
    28,  91,  91,  91,  91,  28,  28,  28,  85,  85,  28,
    28, 202,  91,  28,  91,  91,  91,  18,  91,  91,  28,
    28,  91,  91,  18,  18,  91,  91,  91,  91,  91,  28,
    28,  91,  91,  91,  91, 202,  84,  91,  28,  91,  28,
    28,  18,  18,  18,  18,  18,  91,  18,  91,  28,  28,
    28,  91, 202,  91,  91,  91,  91,  91,  91,  91,  28,
    28,  84,  91,  91,  91,  91,  91,  91,  91,  91,  28,
    28,  18,  18,  18,  18,  91,  91,  18,  91,  91,  28, // 72 // SLIME IN THIS ROW
    28,  91,  91,  91,  91,  85,  85,  91,  91,  91,  28,
    28, 202, 202, 202, 202, 202, 202, 202, 202,  18,  28,
    28,  83,  83,  83,  83,  83,  83,  83, 202,  18,  28,
    28,  18,  18,  28,  28,  18,  18,  18,  18,  18,  28,
    28, 202, 202,  91,  91,  91,  91, 202, 202,  91,  28,
    28,  28,  91,  91, 202,  91, 202,  91,  91,  91,  28,
    28, 202, 202,  85,  18,  84,  91,  91, 202, 202,  28, // SLIME IN THIS ROW
    28,  83,  83,  18,  18,  85,  91,  91,  83,  83,  28, // 80
    28, 100, 100,  28,  28, 111,  91,  91, 100, 100,  28,
    28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28
};

/* blank set, for adding length to game
    28,  91,  91,  91,  91,  91,  91,  91,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  91,  91,  28,
    28,  91,  91,  91,  91,  91,  91,  91,  91,  91,  28, // 8
*/

void Level1::Initialize() {
    state.nextScene = 2;

    GLuint mapTextureID = Util::LoadTexture("mapPack_tilesheet.png");
    state.map = new Map(LEVEL1_WIDTH, LEVEL1_HEIGHT, level1_data, mapTextureID, 1.0f, 17, 12);

    state.player = new Player();

    //GLuint slimeTextureID = Util::LoadTexture("slime.png");

    //state.enemy2 = new Enemy();
    //state.enemy2->DefineSlime(slimeTextureID);
    //state.enemy2->position = glm::vec3(6.0f, -6.0f, 0);
}

void Level1::Update(float deltaTime) {
    state.player->Update(deltaTime, state.map, state.enemy1, state.enemy2, ENEMY_COUNT);

    //state.enemy2->Update(deltaTime, state.map, NULL, NULL, 0);
}

void Level1::Render(ShaderProgram* program) {
    state.map->Render(program);

    //state.enemy2->Render(program);

    state.player->Render(program);
}

void Level1::PlayerPass(Player* prevPlayer) {
    //no previous player for level 1
}